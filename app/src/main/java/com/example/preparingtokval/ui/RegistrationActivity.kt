package com.example.preparingtokval.ui

import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat
import com.example.preparingtokval.App
import com.example.preparingtokval.R
import com.example.preparingtokval.data.models.User
import kotlinx.coroutines.delay
import kotlinx.coroutines.runBlocking

class RegistrationActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_registration)
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
            insets
        }

        findViewById<Button>(R.id.btnBack).setOnClickListener {
            returnToAuthActivity()
        }

        findViewById<Button>(R.id.btnCreateAccount).setOnClickListener {
            createUser()
        }
    }

    private fun returnToAuthActivity() {
        finish()
    }

    private fun createUser() {
        val nickNameFiled = findViewById<EditText>(R.id.editTxtNickname).text
        val loginField = findViewById<EditText>(R.id.editTxtLogin).text
        val passwordField = findViewById<EditText>(R.id.editTxtPassword).text

        if (nickNameFiled != null
            || loginField != null
            || passwordField != null
        ) {
            runBlocking { // функция getUser асинхронная поэтому нужен runBlocking
                App.authorizedUser = // получаем юзера из бд
                    App.dataBase.userDao().getUser(loginField.toString(), passwordField.toString())
            }

            if (App.authorizedUser == null) { // если юзер = null то есть в БД такого нет то создаем нового
                val user: User = User(id = 0, // у поля id аннотоция autoGenerated поэтому пишем 0. БД все равно воткнет новый id
                    nickName = nickNameFiled.toString(),
                    login = loginField.toString(),
                    password = passwordField.toString())
                runBlocking {
                    App.dataBase.userDao().addUser(user) // добавляем аккаунт
                    Toast
                        .makeText(App.appContext, "Аккаунт успешно создан", Toast.LENGTH_LONG)
                        .show() // отображаем пользователю что аккаунт создан
                    delay(500)
                }
                nullAuthorizedUser()
                finish() // выходим на страницу входа
            }
            else
                Toast
                    .makeText(App.appContext, "Придумайте другой логин", Toast.LENGTH_LONG)
                    .show()

            nullAuthorizedUser()
        }
        else
            Toast
                .makeText(App.appContext, "Проверьте правильность заполнения полей", Toast.LENGTH_LONG)
                .show()
    }

    private fun nullAuthorizedUser(){
        App.authorizedUser = null
    }
}